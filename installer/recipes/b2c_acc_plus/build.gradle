def config = {
		localProperties {
				property 'recaptcha.publickey', ''
				property 'recaptcha.privatekey', ''
				property 'googleApiKey', ''
				property 'csrf.allowed.url.patterns', '/[^/]+(/[^?]*)+(sop/response)$,/[^/]+(/[^?]*)+(merchant_callback)$,/[^/]+(/[^?]*)+(hop/response)$,/[^/]+(/[^?]*)+(language)$,/[^/]+(/[^?]*)+(currency)$,/(events)$'
				property 'log4j.logger.de.hybris.eventtracking.publisher', 'DEBUG'

				property 'piwik.tracker.url', ''
				property 'piwik.tracker.https.url', ''
				property 'eventtrackingwsaddon.events_endpoint.enabled','true'
				property 'spring.profiles.active', 'eventtrackingpublisher_develop'
		}

		extensions {
			extName 'mcc'
			extName 'backoffice'
			extName 'commercesearchbackoffice'
			extName 'commerceservicesbackoffice'
			extName 'solrfacetsearchbackoffice'
			extName 'solrserver'

			extName 'yacceleratorcockpits'
			extName 'yacceleratorinitialdata'
			extName 'yacceleratorfulfilmentprocess'
			extName 'yacceleratorstorefront'
			extName 'yaddon'
			extName 'ycommercewebservices'

			extName 'electronicsstore'
			extName 'apparelstore'

			extName 'captchaaddon'
			extName 'liveeditaddon'
			extName 'acceleratorwebservicesaddon'

			extName 'assistedservicestorefront'
			extName 'assistedserviceatddtests'

			extName 'customerticketingaddon'
			extName 'customersupportbackoffice'
			extName 'eventtrackingwsaddon'
			extName 'eventtrackingservices'
			extName 'eventtrackingpublisher'
			extName 'eventtrackingmodel'
			extName 'hybrisanalyticsaddon'
		}
}

task setup << {
		apply plugin: 'installer-platform-plugin'
		apply plugin: 'installer-addon-plugin'
		def pl = platform(config)
		pl.setup()

		pl.project.addons {
				names "captchaaddon,liveeditaddon,hybrisanalyticsaddon,eventtrackingwsaddon,assistedservicestorefront,customerticketingaddon"
				template "yacceleratorstorefront"
				storeFronts "yacceleratorstorefront"
				platform pl
		}

		pl.project.addons {
				names "acceleratorwebservicesaddon"
				template "ycommercewebservices"
				storeFronts "ycommercewebservices"
				platform pl
		}
}

task initialize << {
		apply plugin: 'installer-platform-plugin'
		def pl = platform(config)
		pl.build()
		pl.initialize()
}


task start << {
		apply plugin: 'installer-platform-plugin'
		def pl = platform(config)
		pl.start()
}
