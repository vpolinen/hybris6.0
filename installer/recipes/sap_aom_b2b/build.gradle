apply plugin: 'installer-platform-plugin'
apply plugin: 'installer-addon-plugin'
apply plugin: 'installer-datahub-plugin'

def platformCfg = {

	localProperties {

		/* from hybris basic B2B recipe */
		property 'website.powertools.http', 'http://powertools.local:9001/yb2bacceleratorstorefront'
		property 'website.powertools.https', 'https://powertools.local:9002/yb2bacceleratorstorefront'

		/* please adapt the number ranges according to the settings in the ERP backend */
		property 'keygen.customer.sap_customer_id.start', '0000490000'
		property 'keygen.customer.sap_contact_id.start', '0000490000'

		/* config async order management - order number */
		property 'keygen.order.code.start', '0006200000'

		property 'sapcustomerexchange.outbound.datahub.feed', 'SAPCONSUMER_OUTBOUND_FEED'

		/* config sapcoreconfiguration */
		property 'sapcoreconfiguration.datahuboutbound.enabled', 'true'

		/* config async order management */
		property 'numberseries.cache.size.order_code', '1'
		property 'saporderexchange.orderoutbound.maxRetries', '3'
		property 'log4j.logger.de.hybris.platform.sap.orderexchange', 'debug'
		property 'datahubadapter.datahuboutbound.url','http://localhost:8080/datahub-webapp/v1'

		/* disable hmc autologin */
		property 'hmc.default.autologin', 'false'
		property 'hmc.default.login', ''
		property 'hmc.default.password', ''

		/* for sap productconfiguration */
		property 'crm.system_type', 'Microsoft SQL Server 2'
		property 'crm.database_hostname', 'database.hostname.url'
		property 'crm.database', 'databasename'
		property 'crm.database_port', '1433'
		property 'crm.database_user', 'user'
		property 'crm.database_password', 'password'
		property 'crm.ssc_jndi_usage','false'
		property 'crm.ssc_jndi_datasource','jdbc/datasourcename'
		property 'build.parallel','true'
	}

	extensions {

		/* from hybris basic B2B recipe */
		extName 'mcc'
		extName 'backoffice'
		extName 'commercesearchbackoffice'
		extName 'b2bcommercebackoffice'
		extName 'commerceservicesbackoffice'
		extName 'solrfacetsearchbackoffice'
		extName 'b2badmincockpit'
		extName 'yacceleratorcockpits'
		extName 'yacceleratorinitialdata'
		extName 'yacceleratorfulfilmentprocess'
		extName 'yaddon'
		extName 'ycommercewebservices'
		extName 'powertoolsstore'
		extName 'solrserver'
		extName 'b2bacceleratoraddon'
		extName 'commerceorgaddon'

		/* SAP extensions */
		scanPathWithAutoLoad '${HYBRIS_BIN_DIR}/ext-integration/sap/core'
		scanPathWithAutoLoad '${HYBRIS_BIN_DIR}/ext-integration/sap/masterdata'
		scanPathWithAutoLoad '${HYBRIS_BIN_DIR}/ext-integration/sap/synchronousPricing'
		scanPathWithAutoLoad '${HYBRIS_BIN_DIR}/ext-integration/sap/asynchronousOM'
		scanPathWithAutoLoad '${HYBRIS_BIN_DIR}/ext-integration/sap/availability'
		scanPathWithAutoLoad '${HYBRIS_BIN_DIR}/ext-integration/sap/testsupport'
		scanPathWithAutoLoad '${HYBRIS_BIN_DIR}/ext-integration/sap/creditCheck'

		/* this loads the adapter extension, responsible for communication */
		extensionNames 'datahubadapter', 'datahubbackoffice'
	}
}

def thePlatform = platformFactory.createPlatform platformCfg

def CATALINA_OPTS = "-Xms4096m -Xmx4096m -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+AlwaysPreTouch -XX:+DisableExplicitGC -XX:+CMSIncrementalMode -XX:+CMSIncrementalPacing"

def datahubServerId = 'datahub-tomcat'

def datahubCfg = {

	libraries {

		propertyFile "local.properties", {

			/* datahub settings */
			property 'datahub.extension.exportURL', 'http://localhost:9001/datahubadapter'
			property 'datahub.extension.userName', 'admin'
			property 'datahub.extension.password', 'nimda'
			property 'datahub.encryption.key.path', 'encryption-key.txt'
			property 'datahub.server.url', 'http://localhost:8080/datahub-webapp/v1'

			/* common settings */
			property 'targetsystem.hybriscore.url', 'http://localhost:9001/datahubadapter'
			property 'targetsystem.hybriscore.username', 'admin'
			property 'targetsystem.hybriscore.password', 'nimda'

			property 'targetsystem.saperp.url', 'http://saperp.url'
			property 'targetsystem.saperp.username', 'username'
			property 'targetsystem.saperp.password', 'password'
			property 'targetsystem.saperp.receivername', 'ERP RFC destination name'

			/* sapcoreconfiguration */
			property \
				'sapcoreconfiguration.autocompose.pools', \
				'GLOBAL,SAPCONFIGURATION_POOL,SAPCUSTOMER_INBOUND_POOL,SAPCONSUMER_INBOUND_POOL,SAPCONSUMER_OUTBOUND_POOL,SAPORDER_INBOUND_POOL,SAPORDER_OUTBOUND_POOL'
			property \
				'sapcoreconfiguration.autopublish.targetsystemsbypools', \
				'GLOBAL.HybrisCore,GLOBAL.SapErpSystem,SAPCUSTOMER_INBOUND_POOL.HybrisCore,SAPCONSUMER_INBOUND_POOL.HybrisCore,SAPCONSUMER_OUTBOUND_POOL.SapErpSystem,SAPORDER_OUTBOUND_POOL.SapErpSystem,SAPORDER_INBOUND_POOL.HybrisCore'
			property 'sapcoreconfiguration.autopublish.sleeptime', '5000'
			property 'sapcoreconfiguration.autopublish.initialsleeptime', '5000'
			property 'sapcoreconfiguration.pool', 'SAPCONFIGURATION_POOL'

			/* sapcustomer */
			property 'sapcustomer.language', 'en'

			/* sapidocoutboundadapter */
			property 'sapidocoutboundadapter.usedynamicidocnumberoffset', 'true'
			property 'sapidocoutboundadapter.receivername', 'ERP RFC destination name'
			property 'sapidocoutboundadapter.sendername', 'sendername'
			property 'sapidocoutboundadapter.senderport', 'senderport'
		}
	}

	extensionDir platformHome + "/../ext-integration/datahub/extensions/sap"
	extensions \
		'sapcoreconfiguration', \
		'sapidocintegration', \
		'sapidocoutboundadapter', \
		'party-canonical', \
		'product-canonical', \
		'sapcustomer-raw', \
		'sapcustomer-canonical', \
		'sapcustomer-target', \
		'saporder-raw', \
		'saporder-canonical', \
		'saporder-target', \
		'saperpproduct-raw', \
		'saperpproduct-canonical', \
		'saperpproduct-target', \
		'sappricing-raw', \
		'sappricing-canonical', \
		'sappricing-target'

		webappDir platformHome + "/../ext-integration/datahub/web-app"

	ports {
		http 8080
		ssl 9793
	}
}

task setupPlatform << {

	thePlatform.setup()

	thePlatform.executeAntTarget 'extgen -Dinput.template=yacceleratorstorefront -Dinput.name=yb2bacceleratorstorefront -Dinput.package=de.hybris.platform.yb2bacceleratorstorefront'
	
	thePlatform.extensions {
		extName 'yb2bacceleratorstorefront'
	}

	thePlatform.setup()

	thePlatform.project.addons {
		names "sapcoreaddon,sappricingproductcarouseladdon,b2bacceleratoraddon,commerceorgaddon"
		template "yacceleratorstorefront"
		storeFronts "yb2bacceleratorstorefront"
		platform thePlatform
	}
}

task setupDataHub << {

	datahub(datahubServerId).setup datahubCfg
	new File((File) buildDir, "../../../work/datahub-tomcat/lib/encryption-key.txt").write '8fae27b02e4e64dfb79f18947743b6f9'
}

task setup(dependsOn: [setupPlatform, setupDataHub])

task startDataHub << {

	datahub(datahubServerId).start CATALINA_OPTS
}

task stopDataHub << {

	datahub(datahubServerId).stop()
}

task initialize(dependsOn: [startDataHub]) << {

	thePlatform.build()
	thePlatform.initialize()
	datahub(datahubServerId).stop()
}

task build(dependsOn: [setup]) << {

	thePlatform.build()
}

task startPlatform << {

	thePlatform.start()
}

task stopPlatform << {
	
	thePlatform.stopInBackground()
}

task start(dependsOn: [startDataHub, startPlatform])

task stop(dependsOn: [stopDataHub, stopPlatform])
