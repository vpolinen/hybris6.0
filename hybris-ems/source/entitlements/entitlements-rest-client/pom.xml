<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>entitlements</artifactId>
		<groupId>com.hybris.services.entitlements</groupId>
		<version>6.0.0.0-RC3</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<artifactId>entitlements-rest-client</artifactId>
	<packaging>jar</packaging>
	<name>entitlements-rest-client</name>
	<dependencies>
		<dependency>
			<groupId>com.hybris.services.entitlements</groupId>
			<artifactId>entitlements-api</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.hybris.services.entitlements</groupId>
			<artifactId>entitlements-test-configuration</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>com.hybris.services.entitlements</groupId>
            <artifactId>entitlements-test</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

		<!-- Hybris kernel -->
		<dependency>
			<groupId>com.hybris.kernel</groupId>
			<artifactId>kernel-api</artifactId>
		</dependency>
		<dependency>
			<groupId>com.hybris.atdd</groupId>
			<artifactId>atdd-plus-engine</artifactId>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>com.hybris.commons</groupId>
            <artifactId>hybris-commons-rest-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-grizzly2-http</artifactId>
        </dependency>

        <dependency>
            <groupId>org.codehaus.woodstox</groupId>
            <artifactId>woodstox-core-asl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.test-framework.providers</groupId>
            <artifactId>jersey-test-framework-provider-bundle</artifactId>
            <type>pom</type>
            <scope>test</scope>
        </dependency>

        <!--
              Workaround for spring aspect bug. Need by atdd engine.
              see https://jira.springsource.org/browse/SPR-6819
          -->
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>

    <properties>
        <renamed.war>entitlements-rest.war</renamed.war>
    </properties>

    <build>
        <plugins>

            <!-- ATDD test generation using com.hybris.services.atddengine.Processor -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2</version>
                <executions>
                    <execution>
                        <id>build-dump</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>com.hybris.atddengine.Processor</mainClass>
                    <arguments>
                        <argument>${basedir}</argument>
                        <argument>${project.build.directory}</argument>
                    </arguments>
                    <classpathScope>test</classpathScope>
                </configuration>
            </plugin>

            <!-- Wipe copied ATDD tests and proxies on clean -->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/test/java/generated</directory>
                            <includes>
                                <include>**/*.java</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <fileset>
                            <directory>${basedir}/src/test/resources/atdd</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<!-- Unpack dependencies to make their resources available for Python -->
					<execution>
						<id>unpack-dependencies</id>
						<phase>compile</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<!-- Comma-separated list of required artifact ids -->
							<includeArtifactIds>entitlements-test</includeArtifactIds>

							<includes>**/*.txt</includes>
							<outputDirectory>${project.build.directory}/dependencies</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>

					<!-- Copy entitlements-web.war to our project folder -->
                    <execution>
                        <id>copy-war-to-lib-folder</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.hybris.services.entitlements</groupId>
                                    <artifactId>entitlements-web</artifactId>
                                    <version>${project.parent.version}</version>
                                    <type>war</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/lib</outputDirectory>
                                    <destFileName>${renamed.war}</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Start jetty server with entitlements-web.war -->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>6.1.26</version>
                <dependencies>
                    <dependency>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jsp-api-2.1-glassfish</artifactId>
                        <version>2.1.v20091210</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <skip>${skipTests}</skip>
                    <webApp>${project.build.directory}/lib/${renamed.war}</webApp>
                    <webAppConfig>
                        <extraClasspath>${project.basedir}/../entitlements-test-configuration/deploy/test/</extraClasspath>
                    </webAppConfig>
                    <scanIntervalSeconds>10</scanIntervalSeconds>
                    <contextPath>/</contextPath>
                    <connectors>
                        <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                            <!-- Important! The same port should be defined in local-test.properties -->
                            <port>9876</port>
                            <maxIdleTime>60000</maxIdleTime>
                        </connector>
                    </connectors>
                    <stopPort>9999</stopPort>
                    <stopKey>exit</stopKey>
                </configuration>
                <executions>
                    <execution>
                        <id>start-jetty</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>deploy-war</goal>
                        </goals>
                        <configuration>
                            <scanIntervalSeconds>0</scanIntervalSeconds>
                            <daemon>true</daemon>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-jetty</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Our Jetty server starts on pre-integration and stops on post-integration,
                        so we need to skip tests start on install phase and start only on integration-test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>surefire-it</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skip>false</skip>
                            <systemPropertyVariables>
                                <media.type>application/json</media.type>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Necessary for Spring configuration -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>aspectj-maven-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <id>test-compile</id>
                        <configuration>
                            <source>${jre.source.version}</source>
                            <target>${jre.target.version}</target>
                            <verbose>false</verbose>
                            <aspectLibraries>
                                <aspectLibrary>
                                    <groupId>org.springframework</groupId>
                                    <artifactId>spring-aspects</artifactId>
                                </aspectLibrary>
                            </aspectLibraries>
                        </configuration>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjtools</artifactId>
                        <version>${org.aspectj.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjweaver</artifactId>
                        <version>${org.aspectj.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- We want to have facade ATDD tests there, so we copy them from facade project
                TODO: Copying using relative paths - ugly as hell. And should be remade using classpath reference  -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/src/test/resources/atdd/suites</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/../entitlements-facade/src/test/resources/atdd/suites</directory>
                                    <excludes>
                                        <exclude>**/*_Facade_Only.txt</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                            <!-- Overwrite every time on copying, so there are always new versions here-->
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
    </build>
</project>